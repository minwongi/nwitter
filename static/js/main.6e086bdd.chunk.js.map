{"version":3,"sources":["components/AuthForm.js","routes/Auth.js","fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","auth","getAuth","createUserWithEmailAndPassword","data","console","log","signInWithEmailAndPassword","errorCode","code","errorMessage","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","providerGoogle","GoogleAuthProvider","providerGithub","GithubAuthProvider","signInWithPopup","then","result","credential","credentialFromResult","accessToken","user","catch","credentialFromError","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","dbService","getFirestore","storageService","getStorage","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","deleteDoc","doc","id","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","createAt","Date","now","creatorId","addDoc","collection","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","refreshUser","navigate","useNavigate","displayName","newDisplayName","setNewDisplayName","getMyNweets","q","query","where","getDocs","querySnapshot","forEach","updateProfile","currentUser","photoURL","signOut","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","element","Profile","App","init","setInit","setUserObj","onAuthStateChanged","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e086bdd.chunk.js","sourcesContent":["import Auth from \"routes/Auth\";\r\nimport React from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n} from \"@firebase/auth\";\r\n\r\nfunction AuthForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    //    console.log(event.target.name);\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    // console.log(value);\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const auth = getAuth();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create account\r\n        const data = await createUserWithEmailAndPassword(\r\n          auth,\r\n          email,\r\n          password\r\n        );\r\n        console.log(\"가입\");\r\n        console.log(data);\r\n      } else {\r\n        // log in\r\n        // const data = await signInWithEmailAndPassword(auth, email, password);\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n        console.log(\"로그인\");\r\n        // console.log(data);\r\n      }\r\n      console.log(\"data\");\r\n      console.log(data);\r\n    } catch (error) {\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(errorCode);\r\n      console.log(errorMessage);\r\n      console.log(error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    console.log(event.target.name);\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    const auth = getAuth();\r\n\r\n    const providerGoogle = new GoogleAuthProvider();\r\n    const providerGithub = new GithubAuthProvider();\r\n\r\n    if (name === \"google\") {\r\n      // provider = new GoogleAuthProvider();\r\n      signInWithPopup(auth, providerGoogle)\r\n        .then((result) => {\r\n          let credential = GoogleAuthProvider.credentialFromResult(result);\r\n          let token = credential.accessToken;\r\n          let user = result.user;\r\n          console.log(\"Google데이터 성공\", credential);\r\n        })\r\n        .catch((error) => {\r\n          const errorCode = error.code;\r\n          const errorMessage = error.message;\r\n          const email = error.email;\r\n          const credential = GoogleAuthProvider.credentialFromError(error);\r\n          console.log(\"Google데이터 실패\", credential);\r\n        });\r\n    } else if (name === \"github\") {\r\n      // provider = new GithubAuthProvider();\r\n      signInWithPopup(auth, providerGithub)\r\n        .then((result) => {\r\n          let credential = GithubAuthProvider.credentialFromResult(result);\r\n          let token = credential.accessToken;\r\n          let user = result.user;\r\n          console.log(\"Github데이터 성공\", credential);\r\n        })\r\n        .catch((error) => {\r\n          const errorCode = error.code;\r\n          const errorMessage = error.message;\r\n          const email = error.email;\r\n          const credential = GithubAuthProvider.credentialFromError(error);\r\n          console.log(\"Github데이터 실패\", credential);\r\n        });\r\n    }\r\n    // const data = await signInWithPopup(provider);\r\n    // console.log(\" 데이터터터터\",data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_API_ID,\r\n};\r\n\r\n// const app =\r\ninitializeApp(firebaseConfig);\r\n// export default app;\r\n\r\n// export const firebaseInstance = initializeApp(firebaseConfig);\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();\r\n","import { doc, deleteDoc, updateDoc } from \"@firebase/firestore\";\r\nimport { deleteObject, ref } from \"@firebase/storage\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    console.log(ok);\r\n    if (ok) {\r\n      //Delete\r\n      // await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\r\n      // await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n      await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault(nweetObj, newNweet);\r\n    // console.log(nweetObj, newNweet);\r\n    // await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n    //   text: newNweet\r\n    // });\r\n\r\n    await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your nweet\"\r\n                  value={newNweet}\r\n                  required\r\n                  autoFocus\r\n                  onChange={onChange}\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4> {nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Nweet;\r\n","import { addDoc, collection } from \"@firebase/firestore\";\r\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    // const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)\r\n    // const response = await fileRef.putString(attachment, \"data_url\");\r\n\r\n    let attachmentUrl = \"\";\r\n\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      const response = await uploadString(\r\n        attachmentRef,\r\n        attachment,\r\n        \"data_url\"\r\n      );\r\n      attachmentUrl = await getDownloadURL(response.ref);\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n\r\n    await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n\r\n    // console.log(await response.ref.getDownloadURL());\r\n    // console.log(await getDownloadURL(response.ref));\r\n\r\n    // await addDoc(collection(dbService, \"nweets\"), {\r\n    //   text: nweet,\r\n    //   createAt: Date.now(),\r\n    //   creatorId: userObj.uid,\r\n    // });\r\n    // setNweet(\"\");\r\n\r\n    // await dbService.collection(\"nweets\").add({\r\n    //   text:nweet,\r\n    //   createAt:Date.now(),\r\n    //   creatorId:userObj.uid,\r\n    // });\r\n    // setNweet(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  // console.log(nweets);\r\n\r\n  const onFileChange = (event) => {\r\n    // console.log(event.target.files);\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    // console.log(theFile);\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      // console.log(finishedEvent);\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport {\r\n  addDoc,\r\n  getDocs,\r\n  collection,\r\n  query,\r\n  onSnapshot,\r\n} from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { ref, uploadString, getDownloadURL } from \"@firebase/storage\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  // console.log(userObj);\r\n\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  // const getNweets = async () => {\r\n  //   const q = query(collection(dbService, \"nweets\"));\r\n  //   const querySnapshot = await getDocs(q);\r\n\r\n  //   // const dbNweets = await getDocs(collection(dbService, \"nweets\"));\r\n  //   // //console.log(dbNweets);\r\n  //   // dbNweets.forEach((document) => {\r\n  //   //   // console.log(document.data());\r\n  //   //   const nweetObject = {\r\n  //   //     ...document.data(),\r\n  //   //     id: document.id,\r\n  //   //   };\r\n  //   //   setNweets((prev) => [nweetObject, ...prev]);\r\n  //   // });\r\n\r\n  //   querySnapshot.forEach((doc) => {\r\n  //     const nweetObj = {\r\n  //       ...doc.data(),\r\n  //       id: doc.id,\r\n  //     };\r\n  //     setNweets((prev) => [nweetObj, ...prev]);\r\n  //   });\r\n  // };\r\n  useEffect(() => {\r\n    // getNweets();\r\n    onSnapshot(collection(dbService, \"nweets\"), (snapshot) => {\r\n      // console.log(snapshot.docs);\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      // console.log(nweetArray);\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport { getAuth, updateProfile } from \"firebase/auth\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  //   const history = useHistory();\r\n  const navigate = useNavigate();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  // const getMyNweets = async () => {\r\n  //   const nweets = await dbService\r\n  //     .collection(\"nweets\")\r\n  //     .where(\"creatorId\", \"==\", userObj.uid)\r\n  //     .orderBy(\"createdAt\")\r\n  //     .get();\r\n  //   console.log(nweets.docs.map((doc) => doc.data()));\r\n  // };\r\n\r\n  const getMyNweets = async () => {\r\n    const q = query(\r\n      collection(dbService, \"nweets\"),\r\n      where(\"creatorId\", \"==\", userObj.uid)\r\n      // orderBy(\"createdAt\")\r\n      // get()\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      // console.log(\"드렁오냐?\");\r\n      // console.log(doc.id, \" => \", doc.data());\r\n      console.log(querySnapshot.docs.map((doc) => doc.data()));\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const auth = getAuth();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      // console.log(updateProfile(auth.currentUser, {}));\r\n      // console.log(userObj.updateProfile);\r\n      // await userObj.updateProfile({\r\n      //   displayName: newDisplayName,\r\n      // });\r\n\r\n      const auth = getAuth();\r\n      await updateProfile(auth.currentUser, {\r\n        displayName: newDisplayName,\r\n        photoURL: \"https://example.com/jane-q-user/profile.jpg\",\r\n      });\r\n\r\n      // await updateProfile(userObj, { displayName: newDisplayName });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <div\r\n        style={{\r\n          maxWidth: 890,\r\n          width: \"100%\",\r\n          margin: \"0 auto\",\r\n          marginTop: 80,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Routes>\r\n          {isLoggedIn ? (\r\n            <>\r\n              <Route exact path=\"/\" element={<Home userObj={userObj} />} />\r\n              <Route\r\n                exact\r\n                path=\"/profile\"\r\n                element={\r\n                  <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                }\r\n              />\r\n              {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n              {/* afterSubmit={() => navigate(\"/\")} */}\r\n              {/* <Route exact path=\"*\" element={<Navigate replace to=\"/\" />} /> */}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Route exact path=\"/\" element={<Auth />} />\r\n              {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n              {/* afterSubmit={() => navigate(\"/\")} */}\r\n              {/* <Route exact path=\"*\" element={<Navigate replace to=\"/\" />} /> */}\r\n            </>\r\n          )}\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  // console.log(authService.currentUser);\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [newName, setNewName] = useState(\"\");\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        // setIsLoggedIn(true);\n        // setUserObj(user);\n        // } else {\n        // setIsLoggedIn(false);\n\n        //ㄴㅁㅇㅁㄴㅇㅁㄴㅇ\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n      // console.log(user);\n    });\n  }, []);\n\n  // console.log(authService.currentUser);\n\n  // setInterval(() => {\n  //   console.log(authService.currentUser)\n  // }, 2000)\n\n  const refreshUser = () => {\n    // console.log(authService.currentUser.displayName);\n    // setUserObj(authService.currentUser);\n\n    // ㄴㅇㅁㅇㅁㄴㅇ\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n\n    // setUserObj({ ...authService.currentUser });\n    // setNewName(user.displayName)\n    // setUserObj({ displayName: \"BS\" });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing....\"\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}